import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";

const initialState = {
  cards: [],
  loading: false,
  error: null,
};

export const fetchCards = createAsyncThunk("cards/fetchCards", async () => {
  const response = await fetch("/cards");
  const data = await response.json();
  return data;
});

// Create the slice
const cardsSlice = createSlice({
  name: "cards",
  initialState,
  reducers: {},
  extraReducers: (builder) => {
    // Handle the actions generated by createAsyncThunk
    builder
      .addCase(fetchCards.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(fetchCards.fulfilled, (state, action) => {
        state.loading = false;
        state.cards = action.payload;
      })
      .addCase(fetchCards.rejected, (state, action) => {
        state.loading = false;
        state.error = action.error.message;
      });
  },
});

export default cardsSlice.reducer;
